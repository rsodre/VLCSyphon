# Makefile.in generated by automake 1.15 from Makefile.am.
# modules/gui/macosx/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Common code for VLC modules/.../Makefile.am
#
# Copyright (C) 2005-2007 the VideoLAN team
# Copyright (C) 2005-2008 RÃ©mi Denis-Courmont
#
# Authors: Sam Hocevar <sam@zoy.org>

VPATH = /Users/Roger/Dev/XCode/vlc/extras/package/macosx/../../../modules/gui/macosx
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/vlc
pkgincludedir = $(includedir)/vlc
pkglibdir = $(libdir)/vlc
pkglibexecdir = $(libexecdir)/vlc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin11
host_triplet = x86_64-apple-darwin11
am__append_1 = -D__PLUGIN__
#am__append_2 = -DMODULE_NAME=$(MODULE_NAME)
#am__append_3 = $(top_builddir)/modules/module.rc.lo -Wc,-static
am__append_4 = -Wl,-framework,Sparkle
subdir = modules/gui/macosx
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/c11.m4 $(top_srcdir)/m4/dolt.m4 \
	$(top_srcdir)/m4/flags.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/stdcxx_11.m4 \
	$(top_srcdir)/m4/vlc.m4 $(top_srcdir)/m4/with_pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(guidir)"
LTLIBRARIES = $(gui_LTLIBRARIES)
libmacosx_plugin_la_LIBADD =
am_libmacosx_plugin_la_OBJECTS = libmacosx_plugin_la-about.lo \
	libmacosx_plugin_la-AddonListDataSource.lo \
	libmacosx_plugin_la-AddonsWindowController.lo \
	libmacosx_plugin_la-applescript.lo \
	libmacosx_plugin_la-AppleRemote.lo \
	libmacosx_plugin_la-AudioEffects.lo \
	libmacosx_plugin_la-bookmarks.lo \
	libmacosx_plugin_la-BWQuincyManager.lo \
	libmacosx_plugin_la-BWQuincyUI.lo \
	libmacosx_plugin_la-ControlsBar.lo \
	libmacosx_plugin_la-ConvertAndSave.lo \
	libmacosx_plugin_la-coredialogs.lo \
	libmacosx_plugin_la-CoreInteraction.lo \
	libmacosx_plugin_la-DebugMessageVisualizer.lo \
	libmacosx_plugin_la-ExtensionsDialogProvider.lo \
	libmacosx_plugin_la-ExtensionsManager.lo \
	libmacosx_plugin_la-eyetv.lo libmacosx_plugin_la-fspanel.lo \
	libmacosx_plugin_la-intf-prefs.lo libmacosx_plugin_la-intf.lo \
	libmacosx_plugin_la-InputManager.lo \
	libmacosx_plugin_la-KeyboardBacklight.lo \
	libmacosx_plugin_la-macosx.lo libmacosx_plugin_la-MainMenu.lo \
	libmacosx_plugin_la-MainWindow.lo \
	libmacosx_plugin_la-MainWindowTitle.lo \
	libmacosx_plugin_la-misc.lo libmacosx_plugin_la-open.lo \
	libmacosx_plugin_la-output.lo \
	libmacosx_plugin_la-VLCPlaylistView.lo \
	libmacosx_plugin_la-VLCPlaylist.lo \
	libmacosx_plugin_la-VLCPlaylistInfo.lo \
	libmacosx_plugin_la-PLItem.lo libmacosx_plugin_la-PLModel.lo \
	libmacosx_plugin_la-prefs.lo \
	libmacosx_plugin_la-prefs_widgets.lo \
	libmacosx_plugin_la-PXSourceList.lo \
	libmacosx_plugin_la-ResumeDialogController.lo \
	libmacosx_plugin_la-SideBarItem.lo \
	libmacosx_plugin_la-SharedDialogs.lo \
	libmacosx_plugin_la-simple_prefs.lo \
	libmacosx_plugin_la-SPInvocationGrabbing.lo \
	libmacosx_plugin_la-SPMediaKeyTap.lo \
	libmacosx_plugin_la-StringUtility.lo \
	libmacosx_plugin_la-TrackSynchronization.lo \
	libmacosx_plugin_la-VideoEffects.lo \
	libmacosx_plugin_la-VideoView.lo \
	libmacosx_plugin_la-VLCTimeSelectionPanelController.lo \
	libmacosx_plugin_la-VLCUIWidgets.lo \
	libmacosx_plugin_la-VLCScrollingClipView.lo \
	libmacosx_plugin_la-VLCStatusBarIcon.lo \
	libmacosx_plugin_la-VLCVoutWindowController.lo \
	libmacosx_plugin_la-Windows.lo \
	libmacosx_plugin_la-VLCHUDSliderCell.lo \
	libmacosx_plugin_la-VLCHUDButtonCell.lo \
	libmacosx_plugin_la-VLCHUDCheckboxCell.lo \
	libmacosx_plugin_la-VLCHUDRadiobuttonCell.lo \
	libmacosx_plugin_la-VLCHUDTextFieldCell.lo \
	libmacosx_plugin_la-VLCRendererDiscovery.lo \
	libmacosx_plugin_la-VLCRendererItem.lo \
	libmacosx_plugin_la-VLCRendererDialog.lo
libmacosx_plugin_la_OBJECTS = $(am_libmacosx_plugin_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libmacosx_plugin_la_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCLD) \
	$(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) \
	$(libmacosx_plugin_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCFLAGS) $(OBJCFLAGS)
AM_V_OBJC = $(am__v_OBJC_$(V))
am__v_OBJC_ = $(am__v_OBJC_$(AM_DEFAULT_VERBOSITY))
am__v_OBJC_0 = @echo "  OBJC    " $@;
am__v_OBJC_1 = 
OBJCLD = $(OBJC)
OBJCLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCLD = $(am__v_OBJCLD_$(V))
am__v_OBJCLD_ = $(am__v_OBJCLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCLD_0 = @echo "  OBJCLD  " $@;
am__v_OBJCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmacosx_plugin_la_SOURCES)
DIST_SOURCES = $(libmacosx_plugin_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/autotools/depcomp \
	$(top_srcdir)/modules/common.am
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/Roger/Dev/XCode/vlc/autotools/missing aclocal-1.15
ALIASES =  cvlc rvlc nvlc
ALSA_CFLAGS = 
ALSA_LIBS = 
ALTIVEC_CFLAGS = 
AMTAR = $${TAR-tar}
AM_CPPFLAGS = -DMODULE_STRING=\"$(MODULE_NAME)\" $(am__append_1) \
	$(am__append_2)
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARCH = x86_64 mmx sse sse2
ARCHIVE_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
ARCHIVE_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -larchive -llzma -lz 
ARIBB24_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/libpng16 
ARIBB24_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -laribb24 -lpng16 -lz 
ARIBB25_CFLAGS = 
ARIBB25_LIBS = 
AS = as
ASDCP_CFLAGS = 
ASDCP_LIBS = 
ASM = 
AUTOCONF = ${SHELL} /Users/Roger/Dev/XCode/vlc/autotools/missing autoconf
AUTOHEADER = ${SHELL} /Users/Roger/Dev/XCode/vlc/autotools/missing autoheader
AUTOMAKE = ${SHELL} /Users/Roger/Dev/XCode/vlc/autotools/missing automake-1.15
AVAHI_CFLAGS = 
AVAHI_LIBS = 
AVCODEC_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
AVCODEC_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lavcodec -framework CoreFoundation -framework VideoDecodeAcceleration -framework QuartzCore -framework Foundation -framework AVFoundation -framework CoreVideo -framework CoreMedia -lvpx -lm -lpthread -lopenjpeg -DOPJ_STATIC -lmp3lame -lgsm -lm -lz -pthread -lavutil -lm 
AVFORMAT_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
AVFORMAT_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lavformat -framework CoreFoundation -framework VideoDecodeAcceleration -framework QuartzCore -framework Foundation -framework AVFoundation -framework CoreVideo -framework CoreMedia -lvpx -lm -lpthread -lopenjpeg -DOPJ_STATIC -lmp3lame -lgsm -lm -lz -pthread -lavcodec -framework CoreFoundation -framework VideoDecodeAcceleration -framework QuartzCore -framework Foundation -framework AVFoundation -framework CoreVideo -framework CoreMedia -lvpx -lm -lpthread -lopenjpeg -DOPJ_STATIC -lmp3lame -lgsm -lm -lz -pthread -lavutil -lm 
AWK = awk
BLURAY_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
BLURAY_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lbluray -lxml2 -lfreetype -lz -lfontconfig -lfreetype -lz 
BUILDCC = c99
BUILDEXEEXT = 
CACA_CFLAGS = 
CACA_LIBS = 
CC = xcrun clang -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -mmacosx-version-min=10.7
CCAS = xcrun clang
CCASDEPMODE = depmode=gcc3
CCASFLAGS =  
CCDEPMODE = depmode=gcc3
CFLAGS =   -D_INTL_REDIRECT_MACROS -std=gnu11 -arch x86_64 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Wvolatile-register-var -Werror-implicit-function-declaration -Winit-self -Wformat-security -pipe -fvisibility=hidden -O3 -fno-math-errno -funsafe-math-optimizations -funroll-loops -fomit-frame-pointer
CFLAGS_access_archive =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_access_mtp = 
CFLAGS_access_output_shout =  -D_THREAD_SAFE -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_aribcam = 
CFLAGS_avahi = 
CFLAGS_caca = 
CFLAGS_cdda =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CFLAGS_daala = 
CFLAGS_dc1394 = 
CFLAGS_dca =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/libdca  
CFLAGS_deinterlace = 
CFLAGS_dsm = 
CFLAGS_dv1394 = 
CFLAGS_dvdnav =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/dvdcss  
CFLAGS_dvdread =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/dvdcss  
CFLAGS_fdkaac = 
CFLAGS_flac =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_fluidsynth = 
CFLAGS_gles1 = 
CFLAGS_gles2 = 
CFLAGS_goom =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_kate =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_libbluray =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_libmpeg2 =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/mpeg2dec  
CFLAGS_libvlccore = 
CFLAGS_microdns =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_mmal = 
CFLAGS_mod =  -DMODPLUG_STATIC -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CFLAGS_mpg123 =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_mtp = 
CFLAGS_mux_ogg =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_nfs =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_notify = 
CFLAGS_ogg =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CFLAGS_oggspots =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_omxil = 
CFLAGS_omxil_vout = 
CFLAGS_opencv_example = 
CFLAGS_opencv_wrapper = 
CFLAGS_opus =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/opus  
CFLAGS_qsv = 
CFLAGS_rdp = 
CFLAGS_samplerate =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_schroedinger =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/schroedinger-1.0 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/orc-0.4  
CFLAGS_secret = 
CFLAGS_sftp =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_shine = 
CFLAGS_sid =  -DHAVE_UNIX -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CFLAGS_smb = 
CFLAGS_soxr = 
CFLAGS_speex =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_svg = 
CFLAGS_svgdec = 
CFLAGS_swscale =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CFLAGS_theora =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_twolame =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_udev = 
CFLAGS_upnp =  -D_THREAD_SAFE -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/upnp  
CFLAGS_vnc = 
CFLAGS_vorbis =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_x262 = 
CFLAGS_x264 =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CFLAGS_x26410b = 
CFLAGS_x265 =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  
CFLAGS_xml =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/libxml2  
CHROMAPRINT_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CHROMAPRINT_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lchromaprint -lavcodec -lavutil 
CHROMECAST_CFLAGS = 
CHROMECAST_LIBS = 
CONTRIB_DIR = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11
COPYRIGHT_MESSAGE = Copyright Â© 1996-2016 the VideoLAN team
COPYRIGHT_YEARS = 1996-2016
CPP = xcrun clang -E -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -mmacosx-version-min=10.7
CPPFLAGS = -I$(top_srcdir)/include -I$(top_builddir)/include  -arch x86_64 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include
CPPFLAGS_access_archive = 
CPPFLAGS_access_mtp = 
CPPFLAGS_access_output_shout = 
CPPFLAGS_aribcam = 
CPPFLAGS_avahi = 
CPPFLAGS_caca = 
CPPFLAGS_daala = 
CPPFLAGS_dc1394 = 
CPPFLAGS_dca = 
CPPFLAGS_decklink = 
CPPFLAGS_decklinkoutput = 
CPPFLAGS_directfb = 
CPPFLAGS_dsm = 
CPPFLAGS_dv1394 = 
CPPFLAGS_dvdnav = 
CPPFLAGS_dvdread = 
CPPFLAGS_fdkaac = 
CPPFLAGS_flac = 
CPPFLAGS_fluidsynth = 
CPPFLAGS_gles1 = 
CPPFLAGS_gles2 = 
CPPFLAGS_goom = 
CPPFLAGS_kate = 
CPPFLAGS_liba52 =  
CPPFLAGS_libass =  -DHAVE_FONTCONFIG
CPPFLAGS_libbluray = 
CPPFLAGS_libmpeg2 = 
CPPFLAGS_microdns = 
CPPFLAGS_mpg123 = 
CPPFLAGS_mtp = 
CPPFLAGS_mux_ogg = 
CPPFLAGS_nfs = 
CPPFLAGS_notify = 
CPPFLAGS_ogg = 
CPPFLAGS_oggspots = 
CPPFLAGS_opencv_example = 
CPPFLAGS_opencv_wrapper = 
CPPFLAGS_opus = 
CPPFLAGS_qsv = 
CPPFLAGS_rdp = 
CPPFLAGS_samplerate = 
CPPFLAGS_schroedinger = 
CPPFLAGS_secret = 
CPPFLAGS_sftp = 
CPPFLAGS_shine = 
CPPFLAGS_skins2 =  -I$(top_srcdir)/modules/access/zip/unzip  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/freetype2 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/fribidi  -DHAVE_FRIBIDI -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/harfbuzz  -DHAVE_HARFBUZZ
CPPFLAGS_smb = 
CPPFLAGS_soxr = 
CPPFLAGS_speex = 
CPPFLAGS_svg = 
CPPFLAGS_svgdec = 
CPPFLAGS_theora = 
CPPFLAGS_twolame =   -DLIBTWOLAME_STATIC
CPPFLAGS_udev = 
CPPFLAGS_upnp = 
CPPFLAGS_vnc = 
CPPFLAGS_vorbis = 
CPPFLAGS_vpx =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include  -DENABLE_VP8_DECODER -DENABLE_VP9_DECODER -DENABLE_VP8_ENCODER -DENABLE_VP9_ENCODER
CPPFLAGS_x265 = 
CPPFLAGS_xml = 
CXX = xcrun clang++ -stdlib=libc++ -std=c++11 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -mmacosx-version-min=10.7
CXXCPP = xcrun clang++ -stdlib=libc++ -std=c++11 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -mmacosx-version-min=10.7 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -std=c++11 -D_INTL_REDIRECT_MACROS -arch x86_64 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wvolatile-register-var -Wformat-security -fvisibility=hidden -O3 -fno-math-errno -funsafe-math-optimizations -fno-rounding-math -fno-signaling-nans -funroll-loops -fomit-frame-pointer
CXXFLAGS_live555 =  -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/liveMedia -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/groupsock -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/BasicUsageEnvironment -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/UsageEnvironment
CXXFLAGS_mod =  -DMODPLUG_STATIC -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
CXXFLAGS_qt = 
CXXFLAGS_skins2 = 
CYGPATH_W = echo
DAALA_CFLAGS = 
DAALA_LIBS = 
DBUS_CFLAGS = 
DBUS_LIBS = 
DC1394_CFLAGS = 
DC1394_LIBS = 
DCA_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/libdca 
DCA_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ldca 
DEFS = -DHAVE_CONFIG_H
DEFS_BIGENDIAN = 
DEPDIR = .deps
DESKTOP_FILE_VALIDATE = :
DIRECTFB_CFLAGS = 
DIRECTFB_CONFIG = 
DIRECTFB_LIBS = 
DLLTOOL = false
DOLT_BASH = /bin/bash
DOLT_CLEANFILES = doltlibtool doltcompile
DSM_CFLAGS = 
DSM_LIBS = 
DSYMUTIL = dsymutil
DUMPBIN = 
DV1394_CFLAGS = 
DV1394_LIBS = 
DVBPSI_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
DVBPSI_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ldvbpsi 
DVDNAV_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/dvdcss 
DVDNAV_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ldvdnav -lpthread -ldvdread -ldvdcss 
DVDREAD_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/dvdcss 
DVDREAD_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ldvdread -ldvdcss 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGL_CFLAGS = 
EGL_LIBS = 
EGREP = /usr/bin/grep -E
EVAS_CFLAGS = 
EVAS_LIBS = 
EXEEXT = 
FDKAAC_CFLAGS = 
FDKAAC_LIBS = 
FGREP = /usr/bin/grep -F
FILE_LIBVLCCORE_DLL = 
FILE_LIBVLC_DLL = 
FLAC_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
FLAC_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lFLAC -lm -logg 
FLUIDLITE_CFLAGS = 
FLUIDLITE_LIBS = 
FLUIDSYNTH_CFLAGS = 
FLUIDSYNTH_LIBS = 
FREERDP_CFLAGS = 
FREERDP_LIBS = 
FREETYPE_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/freetype2 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
FREETYPE_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lfreetype -lz 
FRIBIDI_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/fribidi 
FRIBIDI_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lfribidi 
GCRYPT_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include
GCRYPT_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lgcrypt -lgpg-error
GETTEXT_MACRO_VERSION = 0.19
GLES1_CFLAGS = 
GLES1_LIBS = 
GLES2_CFLAGS = 
GLES2_LIBS = 
GL_CFLAGS = 
GL_LIBS = 
GMSGFMT = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/msgfmt
GMSGFMT_015 = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/msgfmt
GNUGETOPT_LIBS = 
GNUTLS_CFLAGS = 
GNUTLS_LIBS = 
GOOM_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
GOOM_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lgoom2 
GREP = /usr/bin/grep
GST_APP_CFLAGS = 
GST_APP_LIBS = 
GST_VIDEO_CFLAGS = 
GST_VIDEO_LIBS = 
HARFBUZZ_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/harfbuzz 
HARFBUZZ_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lharfbuzz -framework ApplicationServices 
HAVE_CXX11 = 1
IDN_CFLAGS = 
IDN_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = -Wl,-framework -Wl,CoreFoundation
JACK_CFLAGS = 
JACK_LIBS = 
KAI_LIBS = 
KATE_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
KATE_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lkate 
KDE4_CONFIG = kde4-config
KVA_LIBS = 
LD =  -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -mmacosx_version_min=10.7
LDFLAGS =  -Wl,-headerpad_max_install_names -arch x86_64 -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib
LDFLAGS_live555 =  
LDFLAGS_mmal = 
LDFLAGS_vlc = 
LDFLAGS_x262 = 
LDFLAGS_x264 = 
LDFLAGS_x26410b = 
LIBASS_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/harfbuzz -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/freetype2 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/libxml2 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/fribidi -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/freetype2 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
LIBASS_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lass -lm -liconv -lharfbuzz -framework ApplicationServices -lfontconfig -lfreetype -lz -lxml2 -lm -lxml2 -lm -lfribidi -lfreetype -lz 
LIBCDDB_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
LIBCDDB_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lcddb 
LIBCOM = 
LIBDL = 
LIBEXT = .dylib
LIBICONV = -liconv
LIBINTL = 
LIBM = -lm
LIBMODPLUG_CFLAGS = -DMODPLUG_STATIC -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
LIBMODPLUG_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmodplug -lstdc++ -lm 
LIBMPEG2_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/mpeg2dec 
LIBMPEG2_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmpeg2 
LIBOBJS =  ${LIBOBJDIR}getdelim$U.o ${LIBOBJDIR}strndup$U.o ${LIBOBJDIR}strnlen$U.o ${LIBOBJDIR}memrchr$U.o ${LIBOBJDIR}tdestroy$U.o ${LIBOBJDIR}timespec_get$U.o ${LIBOBJDIR}strverscmp$U.o
LIBPTHREAD = 
LIBRT = 
LIBS = 
LIBS_access_archive = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -larchive -llzma -lz   
LIBS_access_mtp = 
LIBS_access_output_shout = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lshout -lvorbis -lm -ltheora -logg -lspeex   
LIBS_aribcam = 
LIBS_aribsub = -laribb24 
LIBS_avahi = 
LIBS_caca = 
LIBS_cdda = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lcddb  
LIBS_crystalhd = 
LIBS_daala = 
LIBS_dc1394 = 
LIBS_dca = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ldca   
LIBS_directfb = 
LIBS_dsm = 
LIBS_dv1394 = 
LIBS_dvdnav = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ldvdnav -lpthread -ldvdread -ldvdcss   
LIBS_dvdread = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ldvdread -ldvdcss   
LIBS_faad = -lfaad 
LIBS_fdkaac = 
LIBS_flac = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lFLAC -lm -logg   
LIBS_fluidsynth = 
LIBS_gles1 = 
LIBS_gles2 = 
LIBS_gme = -lgme 
LIBS_goom = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lgoom2   
LIBS_kate = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lkate   
LIBS_liba52 =  -la52 
LIBS_libass = -lfontconfig 
LIBS_libbluray = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lbluray -lxml2 -lfreetype -lz -lfontconfig -lfreetype -lz   
LIBS_libmpeg2 = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmpeg2   
LIBS_libvlc = -Wl,-undefined,dynamic_lookup,-framework,AppKit 
LIBS_libvlccore = -Wl,-framework,CoreFoundation,-framework,CoreServices 
LIBS_live555 = -lliveMedia -lgroupsock -lBasicUsageEnvironment -lUsageEnvironment 
LIBS_microdns = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmicrodns   
LIBS_mkv = -lmatroska -lebml 
LIBS_mmal = 
LIBS_mod = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmodplug -lstdc++ -lm  
LIBS_mpc = -lmpcdec 
LIBS_mpg123 = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmpg123   
LIBS_mtp = 
LIBS_mux_ogg = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg   
LIBS_nfs = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lnfs   
LIBS_notify = 
LIBS_ogg = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg  -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lvorbis -lm -logg  
LIBS_oggspots = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg   
LIBS_opencv_example = 
LIBS_opencv_wrapper = 
LIBS_opus = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg -lopus   
LIBS_osx_notifications = -F/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11 -Wl,-framework,Growl,-framework,Foundation 
LIBS_qsv = 
LIBS_qt = 
LIBS_rdp = 
LIBS_samplerate = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lsamplerate   
LIBS_sap = -lz 
LIBS_schroedinger = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lschroedinger-1.0 -lorc-0.4 -lpthread   
LIBS_secret = 
LIBS_sftp = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lssh2 -Wl,-syslibroot,/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -DMACOSX_DEPLOYMENT_TARGET=10.7 -m64 -lgcrypt -lgpg-error -lz -lgcrypt -lgpg-error -lz   
LIBS_shine = 
LIBS_sid = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib/libsidplay2.la  -lresid-builder 
LIBS_skins2 = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lharfbuzz -framework ApplicationServices  -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lfribidi  -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lfreetype -lz   $(top_builddir)/modules/libunzip.la -lz -lm 
LIBS_smb = 
LIBS_soxr = 
LIBS_speex = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg -lspeex   
LIBS_svg = 
LIBS_svgdec = 
LIBS_swscale = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lswscale -lm -lavutil -lm  
LIBS_theora = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ltheoraenc -ltheoradec -logg   
LIBS_twolame = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ltwolame   
LIBS_udev = 
LIBS_unzip = -lz 
LIBS_upnp = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -D_THREAD_SAFE -lupnp -lthreadutil -lixml   
LIBS_vlc = -Wl,-undefined,dynamic_lookup,-framework,AppKit 
LIBS_vnc = 
LIBS_vorbis = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lvorbisenc -lvorbis -lm -logg   
LIBS_vpx = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lvpx -lm -lpthread  
LIBS_x262 = 
LIBS_x264 = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lx264 -lpthread -lm -ldl  
LIBS_x26410b = 
LIBS_x265 = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lx265 -lc++   
LIBS_xml = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lxml2 -lm   
LIBS_zip = -lz 
LIBTOOL = $(top_builddir)/doltlibtool
LIBVA_DRM_CFLAGS = 
LIBVA_DRM_LIBS = 
LIBVA_X11_CFLAGS = 
LIBVA_X11_LIBS = 
LIBVORBIS_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
LIBVORBIS_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lvorbis -lm -logg 
LIBXML2_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/libxml2 
LIBXML2_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lxml2 -lm 
LINSYS_SDI_CFLAGS = 
LINSYS_SDI_LIBS = 
LIPO = lipo
LIVE555_CFLAGS = 
LIVE555_LIBS = 
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS =  ${LIBOBJDIR}getdelim$U.lo ${LIBOBJDIR}strndup$U.lo ${LIBOBJDIR}strnlen$U.lo ${LIBOBJDIR}memrchr$U.lo ${LIBOBJDIR}tdestroy$U.lo ${LIBOBJDIR}timespec_get$U.lo ${LIBOBJDIR}strverscmp$U.lo
LTLIBaa = 
LTLIBaccess_archive = libaccess_archive_plugin.la
LTLIBaccess_eyetv = libaccess_eyetv_plugin.la
LTLIBaccess_mtp = 
LTLIBaccess_output_shout = libaccess_output_shout_plugin.la
LTLIBaccess_realrtsp = libaccess_realrtsp_plugin.la
LTLIBaccesstweaks = 
LTLIBaribcam = 
LTLIBaribsub = libaribsub_plugin.la
LTLIBaudioqueue = 
LTLIBavahi = 
LTLIBavcapture = libavcapture_plugin.la
LTLIBbpg = 
LTLIBcaca = 
LTLIBcdda = libcdda_plugin.la
LTLIBcrystalhd = 
LTLIBcvpx_i420 = libcvpx_i420_plugin.la
LTLIBdaala = 
LTLIBdc1394 = 
LTLIBdca = libdca_plugin.la
LTLIBdirect2d = 
LTLIBdirect3d11 = 
LTLIBdirect3d9 = 
LTLIBdirectdraw = 
LTLIBdirectfb = 
LTLIBdsm = 
LTLIBdv1394 = 
LTLIBdvdnav = libdvdnav_plugin.la
LTLIBdvdread = libdvdread_plugin.la
LTLIBfaad = libfaad_plugin.la
LTLIBfb = 
LTLIBfdkaac = 
LTLIBflac = libflac_plugin.la
LTLIBfluidsynth = 
LTLIBgles1 = 
LTLIBgles2 = 
LTLIBglwin32 = 
LTLIBgme = libgme_plugin.la
LTLIBgnutls = 
LTLIBgoom = libgoom_plugin.la
LTLIBjpeg = libjpeg_plugin.la
LTLIBkate = libkate_plugin.la
LTLIBliba52 = libliba52_plugin.la
LTLIBlibass = liblibass_plugin.la
LTLIBlibbluray = liblibbluray_plugin.la
LTLIBlibmpeg2 = liblibmpeg2_plugin.la
LTLIBlinsys_hdsdi = 
LTLIBlinsys_sdi = 
LTLIBlive555 = liblive555_plugin.la
LTLIBmacosx = libmacosx_plugin.la
LTLIBmicrodns = libmicrodns_plugin.la
LTLIBminimal_macosx = 
LTLIBmkv = libmkv_plugin.la
LTLIBmmal = 
LTLIBmod = libmod_plugin.la
LTLIBmpc = libmpc_plugin.la
LTLIBmpg123 = libmpg123_plugin.la
LTLIBmtp = 
LTLIBmux_ogg = libmux_ogg_plugin.la
LTLIBnfs = libnfs_plugin.la
LTLIBnotify = 
LTLIBogg = libogg_plugin.la
LTLIBoggspots = liboggspots_plugin.la
LTLIBomxil = 
LTLIBomxil_vout = 
LTLIBopencv_example = 
LTLIBopencv_wrapper = 
LTLIBopensles_android = 
LTLIBopus = libopus_plugin.la
LTLIBosx_notifications = libosx_notifications_plugin.la
LTLIBpng = libpng_plugin.la
LTLIBpostproc = libpostproc_plugin.la
LTLIBprojectm = 
LTLIBqsv = 
LTLIBqt = 
LTLIBqtsound = 
LTLIBquartztext = libquartztext_plugin.la
LTLIBrdp = 
LTLIBsamplerate = libsamplerate_plugin.la
LTLIBschroedinger = libschroedinger_plugin.la
LTLIBscreen = libscreen_plugin.la
LTLIBsdl_image = 
LTLIBsecret = 
LTLIBsftp = libsftp_plugin.la
LTLIBshine = 
LTLIBsid = libsid_plugin.la
LTLIBskins2 = 
LTLIBsmb = 
LTLIBsoxr = 
LTLIBspeex = libspeex_plugin.la
LTLIBstream_out_chromaprint = libstream_out_chromaprint_plugin.la
LTLIBsvg = 
LTLIBsvgdec = 
LTLIBswscale = libswscale_plugin.la
LTLIBtaglib = libtaglib_plugin.la
LTLIBtelx = libtelx_plugin.la
LTLIBtheora = libtheora_plugin.la
LTLIBtizen_audio = 
LTLIBtremor = 
LTLIBtwolame = libtwolame_plugin.la
LTLIBudev = 
LTLIBupnp = libupnp_plugin.la
LTLIBvcd = libvcd_plugin.la
LTLIBvideotoolbox = libvideotoolbox_plugin.la
LTLIBvnc = 
LTLIBvorbis = libvorbis_plugin.la
LTLIBvout_sdl = 
LTLIBvpx = libvpx_plugin.la
LTLIBvsxu = 
LTLIBwgl = 
LTLIBwma_fixed = 
LTLIBx262 = 
LTLIBx264 = libx264_plugin.la
LTLIBx26410b = 
LTLIBx265 = libx265_plugin.la
LTLIBxml = libxml_plugin.la
LTLIBzvbi = libzvbi_plugin.la
LUAC = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/luac
LUA_CFLAGS = 
LUA_LIBS = -llua -lm 
MACOSX_DEPLOYMENT_TARGET = 
MAD_CFLAGS = 
MAD_LIBS =  -lmad
MAINT = 
MAKEINFO = ${SHELL} /Users/Roger/Dev/XCode/vlc/autotools/missing makeinfo
MANIFEST_TOOL = :
MFX_CFLAGS = 
MFX_LIBS = 
MICRODNS_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
MICRODNS_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmicrodns 
MINIZIP_CFLAGS = 
MINIZIP_LIBS = 
MKDIR_P = /Users/Roger/Dev/XCode/vlc/extras/package/macosx/../../../autotools/install-sh -c -d
MOC = 
MPG123_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
MPG123_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lmpg123 
MSGFMT = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/msgfmt
MSGFMT_015 = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/msgfmt
MSGMERGE = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/msgmerge
MTP_CFLAGS = 
MTP_LIBS = 
NCURSES_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
NCURSES_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lncursesw 
NFS_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
NFS_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lnfs 
NM = /usr/bin/nm -B
NMEDIT = nmedit
NOTIFY_CFLAGS = 
NOTIFY_LIBS = 
OBJC = xcrun clang -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -mmacosx-version-min=10.7
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -g -O2 -D_INTL_REDIRECT_MACROS -std=gnu11 -arch x86_64 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -fvisibility=hidden -O3 -funroll-loops -fomit-frame-pointer
OBJCFLAGS_osx_notifications =  -F/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11 -fobjc-exceptions 
OBJCOPY = 
OBJDUMP = false
OBJEXT = o
OGGSPOTS_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
OGGSPOTS_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg 
OGG_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
OGG_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg 
OPENCV_CFLAGS = 
OPENCV_LIBS = 
OPUS_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/opus 
OPUS_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg -lopus 
OSS_LIBS = 
OTOOL = otool
OTOOL64 = :
PACKAGE = vlc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = vlc
PACKAGE_STRING = vlc 3.0.0-git
PACKAGE_TARNAME = vlc
PACKAGE_URL = 
PACKAGE_VERSION = 3.0.0-git
PATH_SEPARATOR = :
PKGDIR = vlc
PKG_CONFIG = /Users/Roger/Dev/XCode/vlc/extras/tools/build/bin/pkg-config --static
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib/pkgconfig:
POSTPROC_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
POSTPROC_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lpostproc -lavutil -lm 
POSUB = 
PROGRAMFILES = 
PROJECTM_CFLAGS = 
PROJECTM_LIBS = 
PROTOC = protoc
PULSE_CFLAGS = 
PULSE_LIBS = 
QTX11_CFLAGS = 
QTX11_LIBS = 
QT_CFLAGS = 
QT_LIBS = 
RANLIB = ranlib
RC = 
RCC = 
SAMPLERATE_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
SAMPLERATE_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lsamplerate 
SCHROEDINGER_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/schroedinger-1.0 -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/orc-0.4 
SCHROEDINGER_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lschroedinger-1.0 -lorc-0.4 -lpthread 
SDL_CFLAGS = 
SDL_IMAGE_CFLAGS = 
SDL_IMAGE_LIBS = 
SDL_LIBS = 
SECRET_CFLAGS = 
SECRET_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SFTP_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
SFTP_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lssh2 -Wl,-syslibroot,/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -DMACOSX_DEPLOYMENT_TARGET=10.7 -m64 -lgcrypt -lgpg-error -lz -lgcrypt -lgpg-error -lz 
SHELL = /bin/sh
SHINE_CFLAGS = 
SHINE_LIBS = 
SHOUT_CFLAGS = -D_THREAD_SAFE -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
SHOUT_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lshout -lvorbis -lm -ltheora -logg -lspeex 
SID_CFLAGS = -DHAVE_UNIX -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
SID_LIBS = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib/libsidplay2.la 
SMBCLIENT_CFLAGS = 
SMBCLIENT_LIBS = 
SOCKET_LIBS = 
SOXR_CFLAGS = 
SOXR_LIBS = 
SPEEXDSP_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
SPEEXDSP_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lspeexdsp 
SPEEX_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
SPEEX_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -logg -lspeex 
STRIP = strip
SVGDEC_CFLAGS = 
SVGDEC_LIBS = 
SVG_CFLAGS = 
SVG_LIBS = 
SWSCALE_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
SWSCALE_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lswscale -lm -lavutil -lm 
SYMBOLIC_LDFLAGS = 
SYS = darwin
SYSTEMD_CFLAGS = 
SYSTEMD_LIBS = 
TAGLIB_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/taglib 
TAGLIB_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ltag 
THEORA_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
THEORA_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ltheoraenc -ltheoradec -logg 
TIGER_CFLAGS = 
TIGER_LIBS = 
TWOLAME_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
TWOLAME_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -ltwolame 
U2D = 
UDEV_CFLAGS = 
UDEV_LIBS = 
UIC = 
UPNP_CFLAGS = -D_THREAD_SAFE -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include/upnp 
UPNP_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -D_THREAD_SAFE -lupnp -lthreadutil -lixml 
USE_NLS = no
VDPAU_CFLAGS = 
VDPAU_LIBS = 
VERSION = 3.0.0-git
VERSION_EXTRA = 0
VERSION_MAJOR = 3
VERSION_MESSAGE = 3.0.0-git Vetinari
VERSION_MINOR = 0
VERSION_REVISION = 0
VNC_CFLAGS = 
VNC_LIBS = 
VORBIS_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
VORBIS_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lvorbisenc -lvorbis -lm -logg 
VPX_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
VPX_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lvpx -lm -lpthread 
VSXU_CFLAGS = 
VSXU_LIBS = 
WAYLAND_CLIENT_CFLAGS = 
WAYLAND_CLIENT_LIBS = 
WAYLAND_EGL_CFLAGS = 
WAYLAND_EGL_LIBS = 
WAYLAND_SCANNER = wayland-scanner
WINDOWS_ARCH = 
WINDRES = 
WINE_SDK_PATH = 
X262_CFLAGS = 
X262_LIBS = 
X26410B_CFLAGS = 
X26410B_LIBS = 
X264_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
X264_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lx264 -lpthread -lm -ldl 
X265_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
X265_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lx265 -lc++ 
XCB_CFLAGS = 
XCB_COMPOSITE_CFLAGS = 
XCB_COMPOSITE_LIBS = 
XCB_KEYSYMS_CFLAGS = 
XCB_KEYSYMS_LIBS = 
XCB_LIBS = 
XCB_RANDR_CFLAGS = 
XCB_RANDR_LIBS = 
XCB_SHM_CFLAGS = 
XCB_SHM_LIBS = 
XCB_XV_CFLAGS = 
XCB_XV_LIBS = 
XEXT_CFLAGS = 
XEXT_LIBS = 
XGETTEXT = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/xgettext
XGETTEXT_015 = /Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XINERAMA_CFLAGS = 
XINERAMA_LIBS = 
XI_CFLAGS = 
XI_LIBS = 
XMKMF = 
XPM_CFLAGS = 
XPM_LIBS = 
XPROTO_CFLAGS = 
XPROTO_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ZVBI_CFLAGS = -I/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/include 
ZVBI_LIBS = -L/Users/Roger/Dev/XCode/vlc/contrib/x86_64-apple-darwin11/lib -lzvbi -lm -lpthread -lm -liconv -lpng -lz 
abs_builddir = /Users/Roger/Dev/XCode/vlc/build/modules/gui/macosx
abs_srcdir = /Users/Roger/Dev/XCode/vlc/extras/package/macosx/../../../modules/gui/macosx
abs_top_builddir = /Users/Roger/Dev/XCode/vlc/build
abs_top_srcdir = /Users/Roger/Dev/XCode/vlc/extras/package/macosx/../../..
ac_ct_AR = ar
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin11
build_alias = x86_64-apple-darwin11
build_cpu = x86_64
build_os = darwin11
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_avfoundation = yes
host = x86_64-apple-darwin11
host_alias = x86_64-apple-darwin11
host_cpu = x86_64
host_os = darwin11
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/Roger/Dev/XCode/vlc/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/Roger/Dev/XCode/vlc/build/vlc_install_dir
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
soliddatadir = 
srcdir = /Users/Roger/Dev/XCode/vlc/extras/package/macosx/../../../modules/gui/macosx
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = /Users/Roger/Dev/XCode/vlc/extras/package/macosx/../../..
vlcdatadir = ${datadir}/${PKGDIR}
vlclibdir = ${libdir}/${PKGDIR}
AUTOMAKE_OPTIONS = subdir-objects
NULL = 
pluginsdir = $(vlclibdir)/plugins
BUILT_SOURCES = 
CLEANFILES = $(BUILT_SOURCES)
LTLIBVLCCORE = $(top_builddir)/src/libvlccore.la

# Module name from object or executable file name.
MODULE_NAME = $$(p="$@"; p="$${p\#\#*/}"; p="$${p\#lib}"; p="$${p%_plugin*}"; p=$$(echo "$$p"|sed 's/-/_/g'); p="$${p%.lo}"; echo "$$p")
AM_CFLAGS = 
AM_CXXFLAGS = 
AM_OBJCFLAGS = 
AM_LDFLAGS = -avoid-version -module -export-symbols-regex ^vlc_entry \
	-shrext $(LIBEXT) -no-undefined \
	$(top_builddir)/compat/libcompat.la $(LTLIBVLCCORE) \
	$(am__append_3)
SUFFIXES = 
guidir = $(pluginsdir)/gui
libmacosx_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) -fobjc-exceptions -fobjc-arc -F${CONTRIB_DIR}
libmacosx_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(guidir)' \
	-Wl,-framework,Cocoa -Wl,-framework,Carbon \
	-Wl,-framework,CoreServices -Wl,-framework,AVFoundation \
	-Wl,-framework,CoreMedia -Wl,-framework,IOKit \
	-Wl,-framework,AddressBook -Wl,-framework,WebKit \
	-Wl,-framework,CoreAudio -Wl,-framework,SystemConfiguration \
	-Wl,-framework,ScriptingBridge -F${CONTRIB_DIR} \
	-Wl,-framework,BGHUDAppKit -Wl,-framework,QuartzCore \
	$(am__append_4)
EXTRA_LTLIBRARIES = libmacosx_plugin.la
gui_LTLIBRARIES = $(LTLIBmacosx)
libmacosx_plugin_la_SOURCES = \
	helpers.h \
	about.h about.m \
	AddonListDataSource.h AddonListDataSource.m \
	AddonsWindowController.h AddonsWindowController.m \
	applescript.h applescript.m \
	AppleRemote.h AppleRemote.m \
	AudioEffects.h AudioEffects.m \
	bookmarks.h bookmarks.m \
	BWQuincyManager.h BWQuincyManager.m \
	BWQuincyUI.h BWQuincyUI.m \
	CompatibilityFixes.h \
	ControlsBar.m ControlsBar.h \
	ConvertAndSave.h ConvertAndSave.m \
	coredialogs.h coredialogs.m \
	CoreInteraction.h CoreInteraction.m \
	DebugMessageVisualizer.h DebugMessageVisualizer.m \
	ExtensionsDialogProvider.h ExtensionsDialogProvider.m \
	ExtensionsManager.h ExtensionsManager.m \
	eyetv.h eyetv.m \
	fspanel.h fspanel.m \
	intf-prefs.h intf-prefs.m \
	intf.h intf.m \
	InputManager.h InputManager.m \
	iTunes.h \
	KeyboardBacklight.h KeyboardBacklight.m \
	macosx.m \
	MainMenu.h MainMenu.m \
	MainWindow.h MainWindow.m \
	MainWindowTitle.h MainWindowTitle.m \
	misc.h misc.m \
	open.h open.m \
	output.h output.m \
	VLCPlaylistView.h VLCPlaylistView.m \
	VLCPlaylist.h VLCPlaylist.m \
	VLCPlaylistInfo.h VLCPlaylistInfo.m \
	PLItem.h PLItem.m \
	PLModel.h PLModel.m \
	prefs.h prefs.m \
	prefs_widgets.h prefs_widgets.m \
	PXSourceList.h PXSourceList.m \
	PXSourceListDataSource.h PXSourceListDelegate.h \
	ResumeDialogController.h ResumeDialogController.m \
	SideBarItem.h SideBarItem.m \
	SharedDialogs.h SharedDialogs.m \
	simple_prefs.h simple_prefs.m \
	SPInvocationGrabbing.h SPInvocationGrabbing.m \
	SPMediaKeyTap.h SPMediaKeyTap.m \
	Spotify.h \
	StringUtility.h StringUtility.m \
	TrackSynchronization.h TrackSynchronization.m \
	VideoEffects.h VideoEffects.m \
	VideoView.h VideoView.m \
	VLCTimeSelectionPanelController.h VLCTimeSelectionPanelController.m \
	VLCUIWidgets.h VLCUIWidgets.m \
	VLCScrollingClipView.h VLCScrollingClipView.m \
	VLCStatusBarIcon.h VLCStatusBarIcon.m \
	VLCVoutWindowController.h VLCVoutWindowController.m \
	Windows.h Windows.m \
	VLCHUDSliderCell.h VLCHUDSliderCell.m \
	VLCHUDButtonCell.h VLCHUDButtonCell.m \
	VLCHUDCheckboxCell.h VLCHUDCheckboxCell.m \
	VLCHUDRadiobuttonCell.h VLCHUDRadiobuttonCell.m \
	VLCHUDTextFieldCell.h VLCHUDTextFieldCell.m \
	VLCRendererDiscovery.h VLCRendererDiscovery.m \
	VLCRendererItem.h VLCRendererItem.m \
	VLCRendererDialog.h VLCRendererDialog.m

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .lo .m .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/modules/common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign modules/gui/macosx/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign modules/gui/macosx/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/modules/common.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-guiLTLIBRARIES: $(gui_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(gui_LTLIBRARIES)'; test -n "$(guidir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(guidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(guidir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(guidir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(guidir)"; \
	}

uninstall-guiLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(gui_LTLIBRARIES)'; test -n "$(guidir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(guidir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(guidir)/$$f"; \
	done

clean-guiLTLIBRARIES:
	-test -z "$(gui_LTLIBRARIES)" || rm -f $(gui_LTLIBRARIES)
	@list='$(gui_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmacosx_plugin.la: $(libmacosx_plugin_la_OBJECTS) $(libmacosx_plugin_la_DEPENDENCIES) $(EXTRA_libmacosx_plugin_la_DEPENDENCIES) 
	$(AM_V_OBJCLD)$(libmacosx_plugin_la_LINK)  $(libmacosx_plugin_la_OBJECTS) $(libmacosx_plugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libmacosx_plugin_la-AddonListDataSource.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-AddonsWindowController.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-AppleRemote.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-AudioEffects.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-BWQuincyManager.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-BWQuincyUI.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-ControlsBar.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-ConvertAndSave.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-CoreInteraction.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-DebugMessageVisualizer.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-ExtensionsDialogProvider.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-ExtensionsManager.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-InputManager.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-KeyboardBacklight.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-MainMenu.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-MainWindow.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-MainWindowTitle.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-PLItem.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-PLModel.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-PXSourceList.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-ResumeDialogController.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-SPInvocationGrabbing.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-SPMediaKeyTap.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-SharedDialogs.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-SideBarItem.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-StringUtility.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-TrackSynchronization.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCHUDButtonCell.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCHUDCheckboxCell.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCHUDRadiobuttonCell.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCHUDSliderCell.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCHUDTextFieldCell.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCPlaylist.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCPlaylistInfo.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCPlaylistView.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCRendererDialog.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCRendererDiscovery.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCRendererItem.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCScrollingClipView.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCStatusBarIcon.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCTimeSelectionPanelController.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCUIWidgets.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VLCVoutWindowController.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VideoEffects.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-VideoView.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-Windows.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-about.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-applescript.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-bookmarks.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-coredialogs.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-eyetv.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-fspanel.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-intf-prefs.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-intf.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-macosx.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-misc.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-open.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-output.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-prefs.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-prefs_widgets.Plo
include ./$(DEPDIR)/libmacosx_plugin_la-simple_prefs.Plo

.m.o:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LTOBJCCOMPILE) -c -o $@ $<

libmacosx_plugin_la-about.lo: about.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-about.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-about.Tpo -c -o libmacosx_plugin_la-about.lo `test -f 'about.m' || echo '$(srcdir)/'`about.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-about.Tpo $(DEPDIR)/libmacosx_plugin_la-about.Plo
#	$(AM_V_OBJC)source='about.m' object='libmacosx_plugin_la-about.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-about.lo `test -f 'about.m' || echo '$(srcdir)/'`about.m

libmacosx_plugin_la-AddonListDataSource.lo: AddonListDataSource.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-AddonListDataSource.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-AddonListDataSource.Tpo -c -o libmacosx_plugin_la-AddonListDataSource.lo `test -f 'AddonListDataSource.m' || echo '$(srcdir)/'`AddonListDataSource.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-AddonListDataSource.Tpo $(DEPDIR)/libmacosx_plugin_la-AddonListDataSource.Plo
#	$(AM_V_OBJC)source='AddonListDataSource.m' object='libmacosx_plugin_la-AddonListDataSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-AddonListDataSource.lo `test -f 'AddonListDataSource.m' || echo '$(srcdir)/'`AddonListDataSource.m

libmacosx_plugin_la-AddonsWindowController.lo: AddonsWindowController.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-AddonsWindowController.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-AddonsWindowController.Tpo -c -o libmacosx_plugin_la-AddonsWindowController.lo `test -f 'AddonsWindowController.m' || echo '$(srcdir)/'`AddonsWindowController.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-AddonsWindowController.Tpo $(DEPDIR)/libmacosx_plugin_la-AddonsWindowController.Plo
#	$(AM_V_OBJC)source='AddonsWindowController.m' object='libmacosx_plugin_la-AddonsWindowController.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-AddonsWindowController.lo `test -f 'AddonsWindowController.m' || echo '$(srcdir)/'`AddonsWindowController.m

libmacosx_plugin_la-applescript.lo: applescript.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-applescript.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-applescript.Tpo -c -o libmacosx_plugin_la-applescript.lo `test -f 'applescript.m' || echo '$(srcdir)/'`applescript.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-applescript.Tpo $(DEPDIR)/libmacosx_plugin_la-applescript.Plo
#	$(AM_V_OBJC)source='applescript.m' object='libmacosx_plugin_la-applescript.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-applescript.lo `test -f 'applescript.m' || echo '$(srcdir)/'`applescript.m

libmacosx_plugin_la-AppleRemote.lo: AppleRemote.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-AppleRemote.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-AppleRemote.Tpo -c -o libmacosx_plugin_la-AppleRemote.lo `test -f 'AppleRemote.m' || echo '$(srcdir)/'`AppleRemote.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-AppleRemote.Tpo $(DEPDIR)/libmacosx_plugin_la-AppleRemote.Plo
#	$(AM_V_OBJC)source='AppleRemote.m' object='libmacosx_plugin_la-AppleRemote.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-AppleRemote.lo `test -f 'AppleRemote.m' || echo '$(srcdir)/'`AppleRemote.m

libmacosx_plugin_la-AudioEffects.lo: AudioEffects.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-AudioEffects.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-AudioEffects.Tpo -c -o libmacosx_plugin_la-AudioEffects.lo `test -f 'AudioEffects.m' || echo '$(srcdir)/'`AudioEffects.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-AudioEffects.Tpo $(DEPDIR)/libmacosx_plugin_la-AudioEffects.Plo
#	$(AM_V_OBJC)source='AudioEffects.m' object='libmacosx_plugin_la-AudioEffects.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-AudioEffects.lo `test -f 'AudioEffects.m' || echo '$(srcdir)/'`AudioEffects.m

libmacosx_plugin_la-bookmarks.lo: bookmarks.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-bookmarks.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-bookmarks.Tpo -c -o libmacosx_plugin_la-bookmarks.lo `test -f 'bookmarks.m' || echo '$(srcdir)/'`bookmarks.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-bookmarks.Tpo $(DEPDIR)/libmacosx_plugin_la-bookmarks.Plo
#	$(AM_V_OBJC)source='bookmarks.m' object='libmacosx_plugin_la-bookmarks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-bookmarks.lo `test -f 'bookmarks.m' || echo '$(srcdir)/'`bookmarks.m

libmacosx_plugin_la-BWQuincyManager.lo: BWQuincyManager.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-BWQuincyManager.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-BWQuincyManager.Tpo -c -o libmacosx_plugin_la-BWQuincyManager.lo `test -f 'BWQuincyManager.m' || echo '$(srcdir)/'`BWQuincyManager.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-BWQuincyManager.Tpo $(DEPDIR)/libmacosx_plugin_la-BWQuincyManager.Plo
#	$(AM_V_OBJC)source='BWQuincyManager.m' object='libmacosx_plugin_la-BWQuincyManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-BWQuincyManager.lo `test -f 'BWQuincyManager.m' || echo '$(srcdir)/'`BWQuincyManager.m

libmacosx_plugin_la-BWQuincyUI.lo: BWQuincyUI.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-BWQuincyUI.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-BWQuincyUI.Tpo -c -o libmacosx_plugin_la-BWQuincyUI.lo `test -f 'BWQuincyUI.m' || echo '$(srcdir)/'`BWQuincyUI.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-BWQuincyUI.Tpo $(DEPDIR)/libmacosx_plugin_la-BWQuincyUI.Plo
#	$(AM_V_OBJC)source='BWQuincyUI.m' object='libmacosx_plugin_la-BWQuincyUI.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-BWQuincyUI.lo `test -f 'BWQuincyUI.m' || echo '$(srcdir)/'`BWQuincyUI.m

libmacosx_plugin_la-ControlsBar.lo: ControlsBar.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-ControlsBar.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-ControlsBar.Tpo -c -o libmacosx_plugin_la-ControlsBar.lo `test -f 'ControlsBar.m' || echo '$(srcdir)/'`ControlsBar.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-ControlsBar.Tpo $(DEPDIR)/libmacosx_plugin_la-ControlsBar.Plo
#	$(AM_V_OBJC)source='ControlsBar.m' object='libmacosx_plugin_la-ControlsBar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-ControlsBar.lo `test -f 'ControlsBar.m' || echo '$(srcdir)/'`ControlsBar.m

libmacosx_plugin_la-ConvertAndSave.lo: ConvertAndSave.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-ConvertAndSave.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-ConvertAndSave.Tpo -c -o libmacosx_plugin_la-ConvertAndSave.lo `test -f 'ConvertAndSave.m' || echo '$(srcdir)/'`ConvertAndSave.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-ConvertAndSave.Tpo $(DEPDIR)/libmacosx_plugin_la-ConvertAndSave.Plo
#	$(AM_V_OBJC)source='ConvertAndSave.m' object='libmacosx_plugin_la-ConvertAndSave.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-ConvertAndSave.lo `test -f 'ConvertAndSave.m' || echo '$(srcdir)/'`ConvertAndSave.m

libmacosx_plugin_la-coredialogs.lo: coredialogs.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-coredialogs.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-coredialogs.Tpo -c -o libmacosx_plugin_la-coredialogs.lo `test -f 'coredialogs.m' || echo '$(srcdir)/'`coredialogs.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-coredialogs.Tpo $(DEPDIR)/libmacosx_plugin_la-coredialogs.Plo
#	$(AM_V_OBJC)source='coredialogs.m' object='libmacosx_plugin_la-coredialogs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-coredialogs.lo `test -f 'coredialogs.m' || echo '$(srcdir)/'`coredialogs.m

libmacosx_plugin_la-CoreInteraction.lo: CoreInteraction.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-CoreInteraction.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-CoreInteraction.Tpo -c -o libmacosx_plugin_la-CoreInteraction.lo `test -f 'CoreInteraction.m' || echo '$(srcdir)/'`CoreInteraction.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-CoreInteraction.Tpo $(DEPDIR)/libmacosx_plugin_la-CoreInteraction.Plo
#	$(AM_V_OBJC)source='CoreInteraction.m' object='libmacosx_plugin_la-CoreInteraction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-CoreInteraction.lo `test -f 'CoreInteraction.m' || echo '$(srcdir)/'`CoreInteraction.m

libmacosx_plugin_la-DebugMessageVisualizer.lo: DebugMessageVisualizer.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-DebugMessageVisualizer.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-DebugMessageVisualizer.Tpo -c -o libmacosx_plugin_la-DebugMessageVisualizer.lo `test -f 'DebugMessageVisualizer.m' || echo '$(srcdir)/'`DebugMessageVisualizer.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-DebugMessageVisualizer.Tpo $(DEPDIR)/libmacosx_plugin_la-DebugMessageVisualizer.Plo
#	$(AM_V_OBJC)source='DebugMessageVisualizer.m' object='libmacosx_plugin_la-DebugMessageVisualizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-DebugMessageVisualizer.lo `test -f 'DebugMessageVisualizer.m' || echo '$(srcdir)/'`DebugMessageVisualizer.m

libmacosx_plugin_la-ExtensionsDialogProvider.lo: ExtensionsDialogProvider.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-ExtensionsDialogProvider.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-ExtensionsDialogProvider.Tpo -c -o libmacosx_plugin_la-ExtensionsDialogProvider.lo `test -f 'ExtensionsDialogProvider.m' || echo '$(srcdir)/'`ExtensionsDialogProvider.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-ExtensionsDialogProvider.Tpo $(DEPDIR)/libmacosx_plugin_la-ExtensionsDialogProvider.Plo
#	$(AM_V_OBJC)source='ExtensionsDialogProvider.m' object='libmacosx_plugin_la-ExtensionsDialogProvider.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-ExtensionsDialogProvider.lo `test -f 'ExtensionsDialogProvider.m' || echo '$(srcdir)/'`ExtensionsDialogProvider.m

libmacosx_plugin_la-ExtensionsManager.lo: ExtensionsManager.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-ExtensionsManager.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-ExtensionsManager.Tpo -c -o libmacosx_plugin_la-ExtensionsManager.lo `test -f 'ExtensionsManager.m' || echo '$(srcdir)/'`ExtensionsManager.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-ExtensionsManager.Tpo $(DEPDIR)/libmacosx_plugin_la-ExtensionsManager.Plo
#	$(AM_V_OBJC)source='ExtensionsManager.m' object='libmacosx_plugin_la-ExtensionsManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-ExtensionsManager.lo `test -f 'ExtensionsManager.m' || echo '$(srcdir)/'`ExtensionsManager.m

libmacosx_plugin_la-eyetv.lo: eyetv.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-eyetv.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-eyetv.Tpo -c -o libmacosx_plugin_la-eyetv.lo `test -f 'eyetv.m' || echo '$(srcdir)/'`eyetv.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-eyetv.Tpo $(DEPDIR)/libmacosx_plugin_la-eyetv.Plo
#	$(AM_V_OBJC)source='eyetv.m' object='libmacosx_plugin_la-eyetv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-eyetv.lo `test -f 'eyetv.m' || echo '$(srcdir)/'`eyetv.m

libmacosx_plugin_la-fspanel.lo: fspanel.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-fspanel.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-fspanel.Tpo -c -o libmacosx_plugin_la-fspanel.lo `test -f 'fspanel.m' || echo '$(srcdir)/'`fspanel.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-fspanel.Tpo $(DEPDIR)/libmacosx_plugin_la-fspanel.Plo
#	$(AM_V_OBJC)source='fspanel.m' object='libmacosx_plugin_la-fspanel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-fspanel.lo `test -f 'fspanel.m' || echo '$(srcdir)/'`fspanel.m

libmacosx_plugin_la-intf-prefs.lo: intf-prefs.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-intf-prefs.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-intf-prefs.Tpo -c -o libmacosx_plugin_la-intf-prefs.lo `test -f 'intf-prefs.m' || echo '$(srcdir)/'`intf-prefs.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-intf-prefs.Tpo $(DEPDIR)/libmacosx_plugin_la-intf-prefs.Plo
#	$(AM_V_OBJC)source='intf-prefs.m' object='libmacosx_plugin_la-intf-prefs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-intf-prefs.lo `test -f 'intf-prefs.m' || echo '$(srcdir)/'`intf-prefs.m

libmacosx_plugin_la-intf.lo: intf.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-intf.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-intf.Tpo -c -o libmacosx_plugin_la-intf.lo `test -f 'intf.m' || echo '$(srcdir)/'`intf.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-intf.Tpo $(DEPDIR)/libmacosx_plugin_la-intf.Plo
#	$(AM_V_OBJC)source='intf.m' object='libmacosx_plugin_la-intf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-intf.lo `test -f 'intf.m' || echo '$(srcdir)/'`intf.m

libmacosx_plugin_la-InputManager.lo: InputManager.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-InputManager.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-InputManager.Tpo -c -o libmacosx_plugin_la-InputManager.lo `test -f 'InputManager.m' || echo '$(srcdir)/'`InputManager.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-InputManager.Tpo $(DEPDIR)/libmacosx_plugin_la-InputManager.Plo
#	$(AM_V_OBJC)source='InputManager.m' object='libmacosx_plugin_la-InputManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-InputManager.lo `test -f 'InputManager.m' || echo '$(srcdir)/'`InputManager.m

libmacosx_plugin_la-KeyboardBacklight.lo: KeyboardBacklight.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-KeyboardBacklight.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-KeyboardBacklight.Tpo -c -o libmacosx_plugin_la-KeyboardBacklight.lo `test -f 'KeyboardBacklight.m' || echo '$(srcdir)/'`KeyboardBacklight.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-KeyboardBacklight.Tpo $(DEPDIR)/libmacosx_plugin_la-KeyboardBacklight.Plo
#	$(AM_V_OBJC)source='KeyboardBacklight.m' object='libmacosx_plugin_la-KeyboardBacklight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-KeyboardBacklight.lo `test -f 'KeyboardBacklight.m' || echo '$(srcdir)/'`KeyboardBacklight.m

libmacosx_plugin_la-macosx.lo: macosx.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-macosx.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-macosx.Tpo -c -o libmacosx_plugin_la-macosx.lo `test -f 'macosx.m' || echo '$(srcdir)/'`macosx.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-macosx.Tpo $(DEPDIR)/libmacosx_plugin_la-macosx.Plo
#	$(AM_V_OBJC)source='macosx.m' object='libmacosx_plugin_la-macosx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-macosx.lo `test -f 'macosx.m' || echo '$(srcdir)/'`macosx.m

libmacosx_plugin_la-MainMenu.lo: MainMenu.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-MainMenu.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-MainMenu.Tpo -c -o libmacosx_plugin_la-MainMenu.lo `test -f 'MainMenu.m' || echo '$(srcdir)/'`MainMenu.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-MainMenu.Tpo $(DEPDIR)/libmacosx_plugin_la-MainMenu.Plo
#	$(AM_V_OBJC)source='MainMenu.m' object='libmacosx_plugin_la-MainMenu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-MainMenu.lo `test -f 'MainMenu.m' || echo '$(srcdir)/'`MainMenu.m

libmacosx_plugin_la-MainWindow.lo: MainWindow.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-MainWindow.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-MainWindow.Tpo -c -o libmacosx_plugin_la-MainWindow.lo `test -f 'MainWindow.m' || echo '$(srcdir)/'`MainWindow.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-MainWindow.Tpo $(DEPDIR)/libmacosx_plugin_la-MainWindow.Plo
#	$(AM_V_OBJC)source='MainWindow.m' object='libmacosx_plugin_la-MainWindow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-MainWindow.lo `test -f 'MainWindow.m' || echo '$(srcdir)/'`MainWindow.m

libmacosx_plugin_la-MainWindowTitle.lo: MainWindowTitle.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-MainWindowTitle.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-MainWindowTitle.Tpo -c -o libmacosx_plugin_la-MainWindowTitle.lo `test -f 'MainWindowTitle.m' || echo '$(srcdir)/'`MainWindowTitle.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-MainWindowTitle.Tpo $(DEPDIR)/libmacosx_plugin_la-MainWindowTitle.Plo
#	$(AM_V_OBJC)source='MainWindowTitle.m' object='libmacosx_plugin_la-MainWindowTitle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-MainWindowTitle.lo `test -f 'MainWindowTitle.m' || echo '$(srcdir)/'`MainWindowTitle.m

libmacosx_plugin_la-misc.lo: misc.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-misc.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-misc.Tpo -c -o libmacosx_plugin_la-misc.lo `test -f 'misc.m' || echo '$(srcdir)/'`misc.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-misc.Tpo $(DEPDIR)/libmacosx_plugin_la-misc.Plo
#	$(AM_V_OBJC)source='misc.m' object='libmacosx_plugin_la-misc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-misc.lo `test -f 'misc.m' || echo '$(srcdir)/'`misc.m

libmacosx_plugin_la-open.lo: open.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-open.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-open.Tpo -c -o libmacosx_plugin_la-open.lo `test -f 'open.m' || echo '$(srcdir)/'`open.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-open.Tpo $(DEPDIR)/libmacosx_plugin_la-open.Plo
#	$(AM_V_OBJC)source='open.m' object='libmacosx_plugin_la-open.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-open.lo `test -f 'open.m' || echo '$(srcdir)/'`open.m

libmacosx_plugin_la-output.lo: output.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-output.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-output.Tpo -c -o libmacosx_plugin_la-output.lo `test -f 'output.m' || echo '$(srcdir)/'`output.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-output.Tpo $(DEPDIR)/libmacosx_plugin_la-output.Plo
#	$(AM_V_OBJC)source='output.m' object='libmacosx_plugin_la-output.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-output.lo `test -f 'output.m' || echo '$(srcdir)/'`output.m

libmacosx_plugin_la-VLCPlaylistView.lo: VLCPlaylistView.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCPlaylistView.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCPlaylistView.Tpo -c -o libmacosx_plugin_la-VLCPlaylistView.lo `test -f 'VLCPlaylistView.m' || echo '$(srcdir)/'`VLCPlaylistView.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCPlaylistView.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCPlaylistView.Plo
#	$(AM_V_OBJC)source='VLCPlaylistView.m' object='libmacosx_plugin_la-VLCPlaylistView.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCPlaylistView.lo `test -f 'VLCPlaylistView.m' || echo '$(srcdir)/'`VLCPlaylistView.m

libmacosx_plugin_la-VLCPlaylist.lo: VLCPlaylist.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCPlaylist.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCPlaylist.Tpo -c -o libmacosx_plugin_la-VLCPlaylist.lo `test -f 'VLCPlaylist.m' || echo '$(srcdir)/'`VLCPlaylist.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCPlaylist.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCPlaylist.Plo
#	$(AM_V_OBJC)source='VLCPlaylist.m' object='libmacosx_plugin_la-VLCPlaylist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCPlaylist.lo `test -f 'VLCPlaylist.m' || echo '$(srcdir)/'`VLCPlaylist.m

libmacosx_plugin_la-VLCPlaylistInfo.lo: VLCPlaylistInfo.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCPlaylistInfo.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCPlaylistInfo.Tpo -c -o libmacosx_plugin_la-VLCPlaylistInfo.lo `test -f 'VLCPlaylistInfo.m' || echo '$(srcdir)/'`VLCPlaylistInfo.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCPlaylistInfo.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCPlaylistInfo.Plo
#	$(AM_V_OBJC)source='VLCPlaylistInfo.m' object='libmacosx_plugin_la-VLCPlaylistInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCPlaylistInfo.lo `test -f 'VLCPlaylistInfo.m' || echo '$(srcdir)/'`VLCPlaylistInfo.m

libmacosx_plugin_la-PLItem.lo: PLItem.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-PLItem.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-PLItem.Tpo -c -o libmacosx_plugin_la-PLItem.lo `test -f 'PLItem.m' || echo '$(srcdir)/'`PLItem.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-PLItem.Tpo $(DEPDIR)/libmacosx_plugin_la-PLItem.Plo
#	$(AM_V_OBJC)source='PLItem.m' object='libmacosx_plugin_la-PLItem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-PLItem.lo `test -f 'PLItem.m' || echo '$(srcdir)/'`PLItem.m

libmacosx_plugin_la-PLModel.lo: PLModel.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-PLModel.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-PLModel.Tpo -c -o libmacosx_plugin_la-PLModel.lo `test -f 'PLModel.m' || echo '$(srcdir)/'`PLModel.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-PLModel.Tpo $(DEPDIR)/libmacosx_plugin_la-PLModel.Plo
#	$(AM_V_OBJC)source='PLModel.m' object='libmacosx_plugin_la-PLModel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-PLModel.lo `test -f 'PLModel.m' || echo '$(srcdir)/'`PLModel.m

libmacosx_plugin_la-prefs.lo: prefs.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-prefs.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-prefs.Tpo -c -o libmacosx_plugin_la-prefs.lo `test -f 'prefs.m' || echo '$(srcdir)/'`prefs.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-prefs.Tpo $(DEPDIR)/libmacosx_plugin_la-prefs.Plo
#	$(AM_V_OBJC)source='prefs.m' object='libmacosx_plugin_la-prefs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-prefs.lo `test -f 'prefs.m' || echo '$(srcdir)/'`prefs.m

libmacosx_plugin_la-prefs_widgets.lo: prefs_widgets.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-prefs_widgets.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-prefs_widgets.Tpo -c -o libmacosx_plugin_la-prefs_widgets.lo `test -f 'prefs_widgets.m' || echo '$(srcdir)/'`prefs_widgets.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-prefs_widgets.Tpo $(DEPDIR)/libmacosx_plugin_la-prefs_widgets.Plo
#	$(AM_V_OBJC)source='prefs_widgets.m' object='libmacosx_plugin_la-prefs_widgets.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-prefs_widgets.lo `test -f 'prefs_widgets.m' || echo '$(srcdir)/'`prefs_widgets.m

libmacosx_plugin_la-PXSourceList.lo: PXSourceList.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-PXSourceList.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-PXSourceList.Tpo -c -o libmacosx_plugin_la-PXSourceList.lo `test -f 'PXSourceList.m' || echo '$(srcdir)/'`PXSourceList.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-PXSourceList.Tpo $(DEPDIR)/libmacosx_plugin_la-PXSourceList.Plo
#	$(AM_V_OBJC)source='PXSourceList.m' object='libmacosx_plugin_la-PXSourceList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-PXSourceList.lo `test -f 'PXSourceList.m' || echo '$(srcdir)/'`PXSourceList.m

libmacosx_plugin_la-ResumeDialogController.lo: ResumeDialogController.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-ResumeDialogController.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-ResumeDialogController.Tpo -c -o libmacosx_plugin_la-ResumeDialogController.lo `test -f 'ResumeDialogController.m' || echo '$(srcdir)/'`ResumeDialogController.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-ResumeDialogController.Tpo $(DEPDIR)/libmacosx_plugin_la-ResumeDialogController.Plo
#	$(AM_V_OBJC)source='ResumeDialogController.m' object='libmacosx_plugin_la-ResumeDialogController.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-ResumeDialogController.lo `test -f 'ResumeDialogController.m' || echo '$(srcdir)/'`ResumeDialogController.m

libmacosx_plugin_la-SideBarItem.lo: SideBarItem.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-SideBarItem.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-SideBarItem.Tpo -c -o libmacosx_plugin_la-SideBarItem.lo `test -f 'SideBarItem.m' || echo '$(srcdir)/'`SideBarItem.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-SideBarItem.Tpo $(DEPDIR)/libmacosx_plugin_la-SideBarItem.Plo
#	$(AM_V_OBJC)source='SideBarItem.m' object='libmacosx_plugin_la-SideBarItem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-SideBarItem.lo `test -f 'SideBarItem.m' || echo '$(srcdir)/'`SideBarItem.m

libmacosx_plugin_la-SharedDialogs.lo: SharedDialogs.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-SharedDialogs.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-SharedDialogs.Tpo -c -o libmacosx_plugin_la-SharedDialogs.lo `test -f 'SharedDialogs.m' || echo '$(srcdir)/'`SharedDialogs.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-SharedDialogs.Tpo $(DEPDIR)/libmacosx_plugin_la-SharedDialogs.Plo
#	$(AM_V_OBJC)source='SharedDialogs.m' object='libmacosx_plugin_la-SharedDialogs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-SharedDialogs.lo `test -f 'SharedDialogs.m' || echo '$(srcdir)/'`SharedDialogs.m

libmacosx_plugin_la-simple_prefs.lo: simple_prefs.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-simple_prefs.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-simple_prefs.Tpo -c -o libmacosx_plugin_la-simple_prefs.lo `test -f 'simple_prefs.m' || echo '$(srcdir)/'`simple_prefs.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-simple_prefs.Tpo $(DEPDIR)/libmacosx_plugin_la-simple_prefs.Plo
#	$(AM_V_OBJC)source='simple_prefs.m' object='libmacosx_plugin_la-simple_prefs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-simple_prefs.lo `test -f 'simple_prefs.m' || echo '$(srcdir)/'`simple_prefs.m

libmacosx_plugin_la-SPInvocationGrabbing.lo: SPInvocationGrabbing.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-SPInvocationGrabbing.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-SPInvocationGrabbing.Tpo -c -o libmacosx_plugin_la-SPInvocationGrabbing.lo `test -f 'SPInvocationGrabbing.m' || echo '$(srcdir)/'`SPInvocationGrabbing.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-SPInvocationGrabbing.Tpo $(DEPDIR)/libmacosx_plugin_la-SPInvocationGrabbing.Plo
#	$(AM_V_OBJC)source='SPInvocationGrabbing.m' object='libmacosx_plugin_la-SPInvocationGrabbing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-SPInvocationGrabbing.lo `test -f 'SPInvocationGrabbing.m' || echo '$(srcdir)/'`SPInvocationGrabbing.m

libmacosx_plugin_la-SPMediaKeyTap.lo: SPMediaKeyTap.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-SPMediaKeyTap.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-SPMediaKeyTap.Tpo -c -o libmacosx_plugin_la-SPMediaKeyTap.lo `test -f 'SPMediaKeyTap.m' || echo '$(srcdir)/'`SPMediaKeyTap.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-SPMediaKeyTap.Tpo $(DEPDIR)/libmacosx_plugin_la-SPMediaKeyTap.Plo
#	$(AM_V_OBJC)source='SPMediaKeyTap.m' object='libmacosx_plugin_la-SPMediaKeyTap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-SPMediaKeyTap.lo `test -f 'SPMediaKeyTap.m' || echo '$(srcdir)/'`SPMediaKeyTap.m

libmacosx_plugin_la-StringUtility.lo: StringUtility.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-StringUtility.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-StringUtility.Tpo -c -o libmacosx_plugin_la-StringUtility.lo `test -f 'StringUtility.m' || echo '$(srcdir)/'`StringUtility.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-StringUtility.Tpo $(DEPDIR)/libmacosx_plugin_la-StringUtility.Plo
#	$(AM_V_OBJC)source='StringUtility.m' object='libmacosx_plugin_la-StringUtility.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-StringUtility.lo `test -f 'StringUtility.m' || echo '$(srcdir)/'`StringUtility.m

libmacosx_plugin_la-TrackSynchronization.lo: TrackSynchronization.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-TrackSynchronization.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-TrackSynchronization.Tpo -c -o libmacosx_plugin_la-TrackSynchronization.lo `test -f 'TrackSynchronization.m' || echo '$(srcdir)/'`TrackSynchronization.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-TrackSynchronization.Tpo $(DEPDIR)/libmacosx_plugin_la-TrackSynchronization.Plo
#	$(AM_V_OBJC)source='TrackSynchronization.m' object='libmacosx_plugin_la-TrackSynchronization.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-TrackSynchronization.lo `test -f 'TrackSynchronization.m' || echo '$(srcdir)/'`TrackSynchronization.m

libmacosx_plugin_la-VideoEffects.lo: VideoEffects.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VideoEffects.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VideoEffects.Tpo -c -o libmacosx_plugin_la-VideoEffects.lo `test -f 'VideoEffects.m' || echo '$(srcdir)/'`VideoEffects.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VideoEffects.Tpo $(DEPDIR)/libmacosx_plugin_la-VideoEffects.Plo
#	$(AM_V_OBJC)source='VideoEffects.m' object='libmacosx_plugin_la-VideoEffects.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VideoEffects.lo `test -f 'VideoEffects.m' || echo '$(srcdir)/'`VideoEffects.m

libmacosx_plugin_la-VideoView.lo: VideoView.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VideoView.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VideoView.Tpo -c -o libmacosx_plugin_la-VideoView.lo `test -f 'VideoView.m' || echo '$(srcdir)/'`VideoView.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VideoView.Tpo $(DEPDIR)/libmacosx_plugin_la-VideoView.Plo
#	$(AM_V_OBJC)source='VideoView.m' object='libmacosx_plugin_la-VideoView.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VideoView.lo `test -f 'VideoView.m' || echo '$(srcdir)/'`VideoView.m

libmacosx_plugin_la-VLCTimeSelectionPanelController.lo: VLCTimeSelectionPanelController.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCTimeSelectionPanelController.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCTimeSelectionPanelController.Tpo -c -o libmacosx_plugin_la-VLCTimeSelectionPanelController.lo `test -f 'VLCTimeSelectionPanelController.m' || echo '$(srcdir)/'`VLCTimeSelectionPanelController.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCTimeSelectionPanelController.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCTimeSelectionPanelController.Plo
#	$(AM_V_OBJC)source='VLCTimeSelectionPanelController.m' object='libmacosx_plugin_la-VLCTimeSelectionPanelController.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCTimeSelectionPanelController.lo `test -f 'VLCTimeSelectionPanelController.m' || echo '$(srcdir)/'`VLCTimeSelectionPanelController.m

libmacosx_plugin_la-VLCUIWidgets.lo: VLCUIWidgets.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCUIWidgets.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCUIWidgets.Tpo -c -o libmacosx_plugin_la-VLCUIWidgets.lo `test -f 'VLCUIWidgets.m' || echo '$(srcdir)/'`VLCUIWidgets.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCUIWidgets.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCUIWidgets.Plo
#	$(AM_V_OBJC)source='VLCUIWidgets.m' object='libmacosx_plugin_la-VLCUIWidgets.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCUIWidgets.lo `test -f 'VLCUIWidgets.m' || echo '$(srcdir)/'`VLCUIWidgets.m

libmacosx_plugin_la-VLCScrollingClipView.lo: VLCScrollingClipView.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCScrollingClipView.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCScrollingClipView.Tpo -c -o libmacosx_plugin_la-VLCScrollingClipView.lo `test -f 'VLCScrollingClipView.m' || echo '$(srcdir)/'`VLCScrollingClipView.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCScrollingClipView.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCScrollingClipView.Plo
#	$(AM_V_OBJC)source='VLCScrollingClipView.m' object='libmacosx_plugin_la-VLCScrollingClipView.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCScrollingClipView.lo `test -f 'VLCScrollingClipView.m' || echo '$(srcdir)/'`VLCScrollingClipView.m

libmacosx_plugin_la-VLCStatusBarIcon.lo: VLCStatusBarIcon.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCStatusBarIcon.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCStatusBarIcon.Tpo -c -o libmacosx_plugin_la-VLCStatusBarIcon.lo `test -f 'VLCStatusBarIcon.m' || echo '$(srcdir)/'`VLCStatusBarIcon.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCStatusBarIcon.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCStatusBarIcon.Plo
#	$(AM_V_OBJC)source='VLCStatusBarIcon.m' object='libmacosx_plugin_la-VLCStatusBarIcon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCStatusBarIcon.lo `test -f 'VLCStatusBarIcon.m' || echo '$(srcdir)/'`VLCStatusBarIcon.m

libmacosx_plugin_la-VLCVoutWindowController.lo: VLCVoutWindowController.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCVoutWindowController.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCVoutWindowController.Tpo -c -o libmacosx_plugin_la-VLCVoutWindowController.lo `test -f 'VLCVoutWindowController.m' || echo '$(srcdir)/'`VLCVoutWindowController.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCVoutWindowController.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCVoutWindowController.Plo
#	$(AM_V_OBJC)source='VLCVoutWindowController.m' object='libmacosx_plugin_la-VLCVoutWindowController.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCVoutWindowController.lo `test -f 'VLCVoutWindowController.m' || echo '$(srcdir)/'`VLCVoutWindowController.m

libmacosx_plugin_la-Windows.lo: Windows.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-Windows.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-Windows.Tpo -c -o libmacosx_plugin_la-Windows.lo `test -f 'Windows.m' || echo '$(srcdir)/'`Windows.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-Windows.Tpo $(DEPDIR)/libmacosx_plugin_la-Windows.Plo
#	$(AM_V_OBJC)source='Windows.m' object='libmacosx_plugin_la-Windows.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-Windows.lo `test -f 'Windows.m' || echo '$(srcdir)/'`Windows.m

libmacosx_plugin_la-VLCHUDSliderCell.lo: VLCHUDSliderCell.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCHUDSliderCell.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCHUDSliderCell.Tpo -c -o libmacosx_plugin_la-VLCHUDSliderCell.lo `test -f 'VLCHUDSliderCell.m' || echo '$(srcdir)/'`VLCHUDSliderCell.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCHUDSliderCell.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCHUDSliderCell.Plo
#	$(AM_V_OBJC)source='VLCHUDSliderCell.m' object='libmacosx_plugin_la-VLCHUDSliderCell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCHUDSliderCell.lo `test -f 'VLCHUDSliderCell.m' || echo '$(srcdir)/'`VLCHUDSliderCell.m

libmacosx_plugin_la-VLCHUDButtonCell.lo: VLCHUDButtonCell.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCHUDButtonCell.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCHUDButtonCell.Tpo -c -o libmacosx_plugin_la-VLCHUDButtonCell.lo `test -f 'VLCHUDButtonCell.m' || echo '$(srcdir)/'`VLCHUDButtonCell.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCHUDButtonCell.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCHUDButtonCell.Plo
#	$(AM_V_OBJC)source='VLCHUDButtonCell.m' object='libmacosx_plugin_la-VLCHUDButtonCell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCHUDButtonCell.lo `test -f 'VLCHUDButtonCell.m' || echo '$(srcdir)/'`VLCHUDButtonCell.m

libmacosx_plugin_la-VLCHUDCheckboxCell.lo: VLCHUDCheckboxCell.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCHUDCheckboxCell.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCHUDCheckboxCell.Tpo -c -o libmacosx_plugin_la-VLCHUDCheckboxCell.lo `test -f 'VLCHUDCheckboxCell.m' || echo '$(srcdir)/'`VLCHUDCheckboxCell.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCHUDCheckboxCell.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCHUDCheckboxCell.Plo
#	$(AM_V_OBJC)source='VLCHUDCheckboxCell.m' object='libmacosx_plugin_la-VLCHUDCheckboxCell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCHUDCheckboxCell.lo `test -f 'VLCHUDCheckboxCell.m' || echo '$(srcdir)/'`VLCHUDCheckboxCell.m

libmacosx_plugin_la-VLCHUDRadiobuttonCell.lo: VLCHUDRadiobuttonCell.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCHUDRadiobuttonCell.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCHUDRadiobuttonCell.Tpo -c -o libmacosx_plugin_la-VLCHUDRadiobuttonCell.lo `test -f 'VLCHUDRadiobuttonCell.m' || echo '$(srcdir)/'`VLCHUDRadiobuttonCell.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCHUDRadiobuttonCell.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCHUDRadiobuttonCell.Plo
#	$(AM_V_OBJC)source='VLCHUDRadiobuttonCell.m' object='libmacosx_plugin_la-VLCHUDRadiobuttonCell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCHUDRadiobuttonCell.lo `test -f 'VLCHUDRadiobuttonCell.m' || echo '$(srcdir)/'`VLCHUDRadiobuttonCell.m

libmacosx_plugin_la-VLCHUDTextFieldCell.lo: VLCHUDTextFieldCell.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCHUDTextFieldCell.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCHUDTextFieldCell.Tpo -c -o libmacosx_plugin_la-VLCHUDTextFieldCell.lo `test -f 'VLCHUDTextFieldCell.m' || echo '$(srcdir)/'`VLCHUDTextFieldCell.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCHUDTextFieldCell.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCHUDTextFieldCell.Plo
#	$(AM_V_OBJC)source='VLCHUDTextFieldCell.m' object='libmacosx_plugin_la-VLCHUDTextFieldCell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCHUDTextFieldCell.lo `test -f 'VLCHUDTextFieldCell.m' || echo '$(srcdir)/'`VLCHUDTextFieldCell.m

libmacosx_plugin_la-VLCRendererDiscovery.lo: VLCRendererDiscovery.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCRendererDiscovery.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCRendererDiscovery.Tpo -c -o libmacosx_plugin_la-VLCRendererDiscovery.lo `test -f 'VLCRendererDiscovery.m' || echo '$(srcdir)/'`VLCRendererDiscovery.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCRendererDiscovery.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCRendererDiscovery.Plo
#	$(AM_V_OBJC)source='VLCRendererDiscovery.m' object='libmacosx_plugin_la-VLCRendererDiscovery.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCRendererDiscovery.lo `test -f 'VLCRendererDiscovery.m' || echo '$(srcdir)/'`VLCRendererDiscovery.m

libmacosx_plugin_la-VLCRendererItem.lo: VLCRendererItem.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCRendererItem.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCRendererItem.Tpo -c -o libmacosx_plugin_la-VLCRendererItem.lo `test -f 'VLCRendererItem.m' || echo '$(srcdir)/'`VLCRendererItem.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCRendererItem.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCRendererItem.Plo
#	$(AM_V_OBJC)source='VLCRendererItem.m' object='libmacosx_plugin_la-VLCRendererItem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCRendererItem.lo `test -f 'VLCRendererItem.m' || echo '$(srcdir)/'`VLCRendererItem.m

libmacosx_plugin_la-VLCRendererDialog.lo: VLCRendererDialog.m
	$(AM_V_OBJC)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -MT libmacosx_plugin_la-VLCRendererDialog.lo -MD -MP -MF $(DEPDIR)/libmacosx_plugin_la-VLCRendererDialog.Tpo -c -o libmacosx_plugin_la-VLCRendererDialog.lo `test -f 'VLCRendererDialog.m' || echo '$(srcdir)/'`VLCRendererDialog.m
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmacosx_plugin_la-VLCRendererDialog.Tpo $(DEPDIR)/libmacosx_plugin_la-VLCRendererDialog.Plo
#	$(AM_V_OBJC)source='VLCRendererDialog.m' object='libmacosx_plugin_la-VLCRendererDialog.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmacosx_plugin_la_OBJCFLAGS) $(OBJCFLAGS) -c -o libmacosx_plugin_la-VLCRendererDialog.lo `test -f 'VLCRendererDialog.m' || echo '$(srcdir)/'`VLCRendererDialog.m

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(guidir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-guiLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-guiLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-guiLTLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-guiLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-guiLTLIBRARIES install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-guiLTLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
